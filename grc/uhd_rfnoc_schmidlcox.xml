<?xml version="1.0"?>
<block>
  <name>RFNoC: SchmidlCox</name>
  <key>uhd_rfnoc_streamer_schmidlcox</key>
  <import>import ettus</import>
  <make>ettus.rfnoc_generic(
    self.device3,
    uhd.stream_args( \# TX Stream Args
        cpu_format="sc16", \# TODO: This must be made an option
        otw_format="sc16",
        channels=(0,),
        args="",
    ),
    uhd.stream_args( \# RX Stream Args
        cpu_format="sc16",
        otw_format="sc16",
        channels=(0,),
        args="",
    ),
    "SchmidlCox", $block_index, $device_index,
)
self.$(id).set_register(130, 64) # Frame length
self.$(id).set_register(131, 16) # CP length
self.$(id).set_register(132, 22) # samples to wait after trigger
self.$(id).set_register(133, 12) # max number of frames to process
self.$(id).set_register(134, 0) # max number of frames to process
</make>
  <param>
    <name>SchmidlCox Select</name>
    <key>block_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($block_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Device Select</name>
    <key>device_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($device_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <sink>
    <name>in</name>
    <type>short</type>
    <vlen>2</vlen>
    <domain>rfnoc</domain>
  </sink>
  <source>
    <name>out</name>
    <type>short</type>
    <vlen>2</vlen>
    <domain>rfnoc</domain>
  </source>
</block>
